def build_seedh(A, B, k):
    seeds = [ A[i:i+k] for i in range(0, len(A)-k+1, k) ]           # O(n)
    kmers = { B[j:j+k] for j in range(len(B)-k+1) }                 # O(nk), O(n) with rolling hash
    is_seed_missing = [ s not in kmers for s in seeds ] + [False]*2 # O(n)
    suffix_sum = np.cumsum(is_seed_missing[::-1])[::-1]             # O(n)
    return lambda ij, k=k: suffix_sum[ ceildiv(ij[0], k) ]          # O(1)

h_seed = build_seed_heuristic(A, B, k=log(len(A)))
astar(A, B, h_seed)

